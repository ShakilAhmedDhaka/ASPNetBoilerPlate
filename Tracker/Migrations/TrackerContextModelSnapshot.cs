// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Tracker.Migrations
{
    [DbContext(typeof(TrackerContext))]
    partial class TrackerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Models.UCredential", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UCredential");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "john@tracker.com",
                            Password = "john1234",
                            Role = "Admin",
                            Username = "john"
                        },
                        new
                        {
                            Id = 2,
                            Email = "george@tracker.com",
                            Password = "goerge1234",
                            Role = "User",
                            Username = "george"
                        },
                        new
                        {
                            Id = 3,
                            Email = "thomas@tracker.com",
                            Password = "thomas1234",
                            Role = "User",
                            Username = "thomas"
                        });
                });

            modelBuilder.Entity("Entities.Models.UProfile", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("UProfile");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Dob = new DateTime(1975, 10, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "John Wick",
                            Sex = "Male"
                        },
                        new
                        {
                            UserId = 2,
                            Dob = new DateTime(1982, 12, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "George Stone",
                            Sex = "Male"
                        },
                        new
                        {
                            UserId = 3,
                            Dob = new DateTime(1993, 4, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Thomas Anderson",
                            Sex = "Male"
                        });
                });

            modelBuilder.Entity("Entities.Models.UProfile", b =>
                {
                    b.HasOne("Entities.Models.UCredential", "Ucredential")
                        .WithOne("Uprofile")
                        .HasForeignKey("Entities.Models.UProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
